{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","onInputURLChange","inputURL","document","getElementById","value","inputTooltips","querySelectorAll","src","querySelector","innerText","forEach","item","style","opacity","data","isYoutubeURL","videoCode","fetch","then","res","json","info","JSON","parse","stringify","items","undefined","title","snippet","channel","channelTitle","thumbnails","thumbnailURL","tempThumbnailWidth","_arr","Object","keys","_i","length","thumbnail","width","url","showThumbnail","infoArea","showData","getVideoCode","urltype","onTimeChange","min","sec","isNumber","isEmpty","alert","slice","onSubmit","resultURL","makeResult","copyToClipboard","setTimeout","showResult","textdata","t","createElement","body","appendChild","select","execCommand","removeChild","_url","_urltype","start","indexOf","end","listcode","includes","videoCodeStart","videoCodeEnd","val","parseInt","react_default","a","className","id","type","placeholder","onChange","minLength","maxLength","size","onClick","readOnly","result","alt","input","window","open","location","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f94d552.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n    // const [loaded, setLoaded] = useState(false);\n    // function autoPasteVaildURL() {\n    //     alert('hi');\n    //     // if (window.confirm('클립보드의 텍스트를 붙여넣을래?'))\n    //     let t = document.createElement('textarea');\n    //     t.focus();\n    //     document.execCommand('paste');\n    //     console.log(t);\n    //     console.log(t.textContent);\n    //     // }\n    // }\n\n    // useEffect(() => {\n    //     document.addEventListener('click', autoPasteVaildURL, { once: true });\n    // }, []);\n\n    function onInputURLChange() {\n        let inputURL = document.getElementById('originallink').value;\n        let inputTooltips = document.querySelectorAll('.input-tooltip');\n        // inputURL이 유튜브 링크 맞으면 썸네일 가져오기\n\t\t// \n        if (inputURL == '') {\n\t\t\thideThumbnail();\n\t\t\thideInfo();\n            inputTooltips.forEach((item) => (item.style.opacity = 0));\n        } else {\n            let data = isYoutubeURL(inputURL);\n            if (data) {\n                inputTooltips.forEach((item) => (item.style.opacity = 0));\n                let videoCode = getVideoCode(data.url, data.urltype);\n\t\t\t\tshowData(videoCode);\n            } else if (!data) {\n                inputTooltips.forEach((item) => (item.style.opacity = 1));\n            }\n        }\n    }\n\n    function onTimeChange() {\n        // validate min & sec\n        let min = document.getElementById('min');\n        let sec = document.getElementById('sec');\n        if (!isNumber(min.value) && !isEmpty(min.value)) {\n            alert(min.value + ' is not a integer');\n            min.value = '';\n            return;\n        } else if (!isNumber(sec.value) && !isEmpty(sec.value)) {\n            alert(sec.value + ' is not a integer');\n            sec.value = '';\n            return;\n        } else if (sec.value >= 60) {\n            alert('sec must be smaller than 60');\n            sec.value = sec.value.slice(0, 1);\n            return;\n        }\n    }\n\n    function onSubmit() {\n        let data;\n        let inputURL = document.getElementById('originallink').value;\n        let min = document.getElementById('min');\n        let sec = document.getElementById('sec');\n\n        if (isEmpty(inputURL)) {\n            alert('Enter your URL');\n            return;\n        } else {\n            data = isYoutubeURL(inputURL);\n            if (data === false || document.querySelector('.input-tooltip').style.opacity == 1) { // 정리 필요\n                alert('Check your URL\\nYour URL might be wrong');\n                return;\n            }\n        }\n        if (isEmpty(min.value)) min.value = 0;\n        if (isEmpty(sec.value)) sec.value = 0;\n        let videoCode = getVideoCode(data.url, data.urltype);\n        let resultURL = makeResult(data, min.value, sec.value);\n        copyToClipboard(resultURL);\n        showResult(resultURL, videoCode);\n\t\tlet submitTooltips = document.querySelectorAll('.submit-tooltip');\n\t\tsubmitTooltips.forEach((item) => (item.style.opacity = 1));\n    }\n\n    function makeResult(data, min, sec) {\n        let videoCode = getVideoCode(data.url, data.urltype);\n        let result = 'https://youtu.be/' + videoCode + '?t=' + (60 * min + 1 * sec);\n        // https://youtu.be/cxNIewNXpcg?list=RDcxNIewNXpcg\n        if (min == 0 && sec == 0) {\n            result = 'https://youtu.be/' + videoCode;\n        } else {\n            result = 'https://youtu.be/' + videoCode + '?t=' + (60 * min + 1 * sec);\n        }\n        return result;\n    }\n\n    function copyToClipboard(textdata) {\n        let t = document.createElement('textarea');\n        document.body.appendChild(t);\n        t.value = textdata;\n        t.select();\n        document.execCommand('copy');\n        document.body.removeChild(t);\n    }\n\n    function copyResultToClipboard() {\n        let result = document.querySelector('#result').value;\n        if (result) {\n            copyToClipboard(result);\n            setTimeout(() => alert('URL copied!'), 300);\n        }\n    }\n\n    function showResult(resultURL, videoCode) {\n        document.getElementById('result').value = resultURL;\n        setTimeout(() => alert('URL copied!'), 300);\n    }\n\n    function showData(videoCode) {\n\t\tlet data = fetch('https://www.googleapis.com/youtube/v3/videos?part=snippet&id='+videoCode+'&key='+process.env.REACT_APP_YOUTUBE_API_KEY)\n        \t.then( (res) => res.json() )\n        \t.then( (json) => {\n\t\t\t\t  let info = JSON.parse(JSON.stringify(json)).items[0] // description, channelId, localized.title, localized.description, tags, thumbnails, etc\n\t\t\t\t  if (info == undefined) {\n\t\t\t\t\t  document.querySelectorAll('.input-tooltip').forEach((item) => (item.style.opacity = 1));\n\t\t\t\t\t  return\n\t\t\t\t  } else {\n\t\t\t\t\t  info = info.snippet\n\t\t\t\t  }\n\t\t\t\t  let title = info.title;\n\t\t\t\t  let channel = info.channelTitle;\n\t\t\t\t  let thumbnails = info.thumbnails;\n\t\t\t\t  let thumbnailURL = '';\n\t\t\t\t  let tempThumbnailWidth = 0\n\t\t\t\t  for (let thumbnail of Object.keys(thumbnails)) {\n\t\t\t\t\t  if (thumbnails[thumbnail].width > tempThumbnailWidth) {\n\t\t\t\t\t\t  tempThumbnailWidth = thumbnails[thumbnail].width;\n\t\t\t\t\t\t  thumbnailURL = thumbnails[thumbnail].url;\n\t\t\t\t\t  }\n\t\t\t\t  }\n\t\t\t\t  showThumbnail(thumbnailURL);\n\t\t\t\t  let infoArea = document.querySelector('#videoInfo')\n\t\t\t\t  infoArea.innerText = '['+channel+']' + ' ' + title;\n\t\t\t\t  return ;\n\t\t\t\t })\n    }\n\t\n\tfunction hideInfo() {\n\t\tlet infoArea = document.querySelector('#videoInfo')\n\t\tinfoArea.innerText = '';\n\t}\n\t\n    function showThumbnail(thumbnailURL) {\n\t\tlet image = document.getElementById('thumbnail');\n        image.src = thumbnailURL;\n    }\n\t\n\tfunction hideThumbnail() {\n\t\tdocument.getElementById('thumbnail').src = '';\n\t}\n    // https://i.ytimg.com/vi/M03hNLFsRKY/maxresdefault.jpg (maxresdefault, sddefault, 0)\n    // https://www.youtube.com/watch?v=8Wtvn2LBQHM&feature=youtu.be\n    // https://youtu.be/8Wtvn2LBQHM\n\n    function getVideoCode(url, urltype) {\n        let _url = url;\n        let _urltype = urltype;\n        if (_urltype === 'shortURL') {\n            return _url.slice(9);\n        }\n        if (_urltype === 'fullURL') {\n            let start = _url.indexOf('v=') + 2;\n            let end = start + 11;\n            return _url.slice(start, end);\n        }\n    }\n\n    function isYoutubeURL(inputURL) {\n        let listcode = null;\n        if (inputURL.includes('?t=')) {\n            // t 있는지 check\n            inputURL = inputURL.slice(0, inputURL.indexOf('?t='));\n        }\n        if (inputURL.includes('?list=')) {\n            // list 있는지 체크\n            let start = inputURL.indexOf('?list=') + 6;\n            listcode = inputURL.slice(start, start + 13);\n        }\n        if (inputURL.includes('youtu.be')) {\n            let videoCodeStart = inputURL.indexOf('youtu.be') + 9; // youtu.be/(videoCode)\n            let videoCodeEnd = videoCodeStart + 11;\n            if (inputURL.slice(videoCodeStart, videoCodeEnd).length < 11) {\n                return false;\n            }\n            if (inputURL.slice(8, 16) === 'youtu.be') {\n                // https\n                return { urltype: 'shortURL', url: inputURL.slice(8), listcode };\n            }\n            if (inputURL.slice(7, 15) === 'youtu.be') {\n                // http\n                return { urltype: 'shortURL', url: inputURL.slice(7), listcode };\n            }\n            if (inputURL.slice(0, 8) === 'youtu.be') {\n                return { urltype: 'shortURL', url: inputURL, listcode };\n            }\n        }\n        if (inputURL.includes('youtube.com')) {\n\t\t\tif (!inputURL.includes('?v=')) return false;\n\t\t\t\n            let videoCodeStart = inputURL.indexOf('?v=') + 3;\n            let videoCodeEnd = videoCodeStart + 11;\n            if (inputURL.slice(videoCodeStart, videoCodeEnd).length < 11) {\n                return false;\n            }\n            if (inputURL.slice(0, 11) === 'youtube.com') {\n                // www 생략\n                return { urltype: 'fullURL', url: inputURL, listcode };\n            }\n            if (inputURL.slice(4, 15) === 'youtube.com') {\n                return { urltype: 'fullURL', url: inputURL.slice(4), listcode };\n            }\n            if (inputURL.slice(11, 22) === 'youtube.com') {\n                // http\n                return { urltype: 'fullURL', url: inputURL.slice(11), listcode };\n            }\n            if (inputURL.slice(12, 23) === 'youtube.com') {\n                // https\n                return { urltype: 'fullURL', url: inputURL.slice(12), listcode };\n            }\n        } else return false;\n    }\n\t\n\tfunction openVideo() {\n\t\tlet result = document.getElementById('result').value\n\t\tlet input = document.getElementById('originallink').value\n\t\tif ( result ) {\n\t\t\twindow.open(result);\n\t\t} else {\n\t\t\twindow.open(input);\n\t\t}\n\t}\n\n    function isNumber(val) {\n        if (val == parseInt(val)) return true;\n        else return false;\n    }\n\n    function isEmpty(val) {\n        if (val == null || val == '' || val == undefined) return true;\n        else return false;\n    }\n\n    function share() {\n        let t = document.createElement('textarea');\n        document.body.appendChild(t);\n        t.value = window.location;\n        t.select();\n        document.execCommand('copy');\n        document.body.removeChild(t);\n        setTimeout(() => alert('URL copied!\\nThanks for sharing'), 300);\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1 id=\"title\">Youtube specific time URL Generator</h1>\n                <div className=\"main\">\n                    <input\n                        id=\"originallink\"\n                        type=\"text\"\n                        className=\"width100\"\n                        placeholder=\"original URL\"\n                        onChange={() => onInputURLChange()}\n                    />\n                    <div className=\"p-tooltip input-tooltip\">\n                        <div className=\"p-tooltip-content input-tooltip\">check your URL</div>\n                        <div className=\"p-tooltip-arrow input-tooltip\" />\n                    </div>\n\n                    <div className=\"inputs width100\">\n                        <input\n                            id=\"min\"\n                            type=\"text\"\n                            minLength=\"1\"\n                            maxLength=\"4\"\n                            size=\"6\"\n                            placeholder=\"min\"\n                            onChange={() => onTimeChange()}\n                        />\n                        &nbsp;&nbsp;:&nbsp;&nbsp;\n                        <input\n                            id=\"sec\"\n                            type=\"text\"\n                            minLength=\"1\"\n                            maxLength=\"2\"\n                            size=\"6\"\n                            placeholder=\"sec\"\n                            onChange={() => onTimeChange()}\n                        />\n                        <button id=\"submit\" onClick={() => onSubmit()}>\n                            submit\n                        </button>\n                    </div>\n                    <input\n                        id=\"result\"\n                        type=\"text\"\n                        placeholder=\"result\"\n                        readOnly\n                        style={{ width: '100%' }}\n                        onClick={() => copyResultToClipboard()}\n                    />\n                </div>\n            </header>\n\t\t\t<div id=\"videoInfo\"></div>\n            <img id=\"thumbnail\" alt=\"\" onClick={() => {openVideo()}}></img>\n            <button id=\"share\" onClick={() => share()}>\n                share this page\n            </button>\n        </div>\n    );\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}