{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","onInputURLChange","inputURL","document","getElementById","value","inputTooltips","querySelectorAll","forEach","item","style","opacity","data","isYoutubeURL","videoCode","image","thumbnailURL","src","naturalHeight","showThumbnail","getVideoCode","url","urltype","onTimeChange","min","sec","isNumber","isEmpty","alert","slice","onSubmit","resultURL","makeResult","copyToClipboard","setTimeout","showResult","fetch","then","res","json","console","log","JSON","stringify","showData","textdata","t","createElement","body","appendChild","select","execCommand","removeChild","_url","_urltype","start","indexOf","end","listcode","includes","videoCodeStart","videoCodeEnd","length","val","parseInt","undefined","react_default","a","className","id","type","placeholder","onChange","minLength","maxLength","size","onClick","readOnly","width","result","querySelector","alt","input","window","open","location","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8477bd06.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n    // const [loaded, setLoaded] = useState(false);\n    // function autoPasteVaildURL() {\n    //     alert('hi');\n    //     // if (window.confirm('클립보드의 텍스트를 붙여넣을래?'))\n    //     let t = document.createElement('textarea');\n    //     t.focus();\n    //     document.execCommand('paste');\n    //     console.log(t);\n    //     console.log(t.textContent);\n    //     // }\n    // }\n\n    // useEffect(() => {\n    //     document.addEventListener('click', autoPasteVaildURL, { once: true });\n    // }, []);\n\n    function onInputURLChange() {\n        let inputURL = document.getElementById('originallink').value;\n        let inputTooltips = document.querySelectorAll('.input-tooltip');\n        // inputURL이 유튜브 링크 맞으면 썸네일 가져오기\n        if (inputURL == '') {\n            inputTooltips.forEach((item) => (item.style.opacity = 0));\n        } else {\n            let data = isYoutubeURL(inputURL);\n            if (data) {\n                inputTooltips.forEach((item) => (item.style.opacity = 0));\n                let videoCode = getVideoCode(data.url, data.urltype);\n                showThumbnail(videoCode);\n            } else if (!data) {\n                inputTooltips.forEach((item) => (item.style.opacity = 1));\n            }\n        }\n    }\n\n    function onTimeChange() {\n        // validate min & sec\n        let min = document.getElementById('min');\n        let sec = document.getElementById('sec');\n        if (!isNumber(min.value) && !isEmpty(min.value)) {\n            alert(min.value + ' is not a integer');\n            min.value = '';\n            return;\n        } else if (!isNumber(sec.value) && !isEmpty(sec.value)) {\n            alert(sec.value + ' is not a integer');\n            sec.value = '';\n            return;\n        } else if (sec.value >= 60) {\n            alert('sec must be smaller than 60');\n            sec.value = sec.value.slice(0, 1);\n            return;\n        }\n    }\n\n    function onSubmit() {\n        let data;\n        let inputURL = document.getElementById('originallink').value;\n        let min = document.getElementById('min');\n        let sec = document.getElementById('sec');\n\n        if (isEmpty(inputURL)) {\n            alert('Enter your URL');\n            return;\n        } else {\n            data = isYoutubeURL(inputURL);\n            if (data === false) {\n                alert('Check your URL\\nYour URL might be wrong');\n                return;\n            }\n        }\n        if (isEmpty(min.value)) min.value = 0;\n        if (isEmpty(sec.value)) sec.value = 0;\n        let videoCode = getVideoCode(data.url, data.urltype);\n        let resultURL = makeResult(data, min.value, sec.value);\n        copyToClipboard(resultURL);\n        showResult(resultURL, videoCode);\n\t\tshowData(videoCode);\n\t\tlet submitTooltips = document.querySelectorAll('.submit-tooltip');\n\t\tsubmitTooltips.forEach((item) => (item.style.opacity = 1));\n    }\n\n    function makeResult(data, min, sec) {\n        let videoCode = getVideoCode(data.url, data.urltype);\n        let result = 'https://youtu.be/' + videoCode + '?t=' + (60 * min + 1 * sec);\n        // https://youtu.be/cxNIewNXpcg?list=RDcxNIewNXpcg\n        if (min == 0 && sec == 0) {\n            result = 'https://youtu.be/' + videoCode;\n        } else {\n            result = 'https://youtu.be/' + videoCode + '?t=' + (60 * min + 1 * sec);\n        }\n        return result;\n    }\n\n    function copyToClipboard(textdata) {\n        let t = document.createElement('textarea');\n        document.body.appendChild(t);\n        t.value = textdata;\n        t.select();\n        document.execCommand('copy');\n        document.body.removeChild(t);\n    }\n\n    function copyResultToClipboard() {\n        let result = document.querySelector('#result').value;\n        if (result) {\n            copyToClipboard(result);\n            setTimeout(() => alert('URL copied!'), 300);\n        }\n    }\n\n    function showResult(resultURL, videoCode) {\n        document.getElementById('result').value = resultURL;\n        setTimeout(() => alert('URL copied!'), 300);\n    }\n\n    function showData(videoCode) {\n        fetch('https://www.googleapis.com/youtube/v3/videos?part=snippet&id='+videoCode+'&key='+process.env.REACT_APP_YOUTUBE_API_KEY)\n        \t.then( (res) => res.json() )\n        \t.then( (json) => console.log(JSON.stringify(json)) )\n    }\n\t\n\t\n\t\n    function showThumbnail(videoCode) {\n        let image = document.getElementById('thumbnail');\n        let thumbnailURL = 'https://i.ytimg.com/vi/' + videoCode + '/maxresdefault.jpg';\n        image.src = thumbnailURL;\n        if (image.naturalHeight == 90)\n            image.src = 'https://i.ytimg.com/vi/' + videoCode + '/hddefault.jpg';\n        if (image.naturalHeight == 90)\n            image.src = 'https://i.ytimg.com/vi/' + videoCode + '/sddefault.jpg';\n        if (image.naturalHeight == 90) image.src = 'https://i.ytimg.com/vi/' + videoCode + '/0.jpg';\n    }\n    // https://i.ytimg.com/vi/M03hNLFsRKY/maxresdefault.jpg (maxresdefault, sddefault, 0)\n    // https://www.youtube.com/watch?v=8Wtvn2LBQHM&feature=youtu.be\n    // https://youtu.be/8Wtvn2LBQHM\n\n    function getVideoCode(url, urltype) {\n        let _url = url;\n        let _urltype = urltype;\n        if (_urltype === 'shortURL') {\n            return _url.slice(9);\n        }\n        if (_urltype === 'fullURL') {\n            let start = _url.indexOf('v=') + 2;\n            let end = start + 11;\n            return _url.slice(start, end);\n        }\n    }\n\n    function isYoutubeURL(inputURL) {\n        let listcode = null;\n        if (inputURL.includes('?t=')) {\n            // t 있는지 check\n            inputURL = inputURL.slice(0, inputURL.indexOf('?t='));\n        }\n        if (inputURL.includes('?list=')) {\n            // list 있는지 체크\n            let start = inputURL.indexOf('?list=') + 6;\n            listcode = inputURL.slice(start, start + 13);\n        }\n        if (inputURL.includes('youtu.be')) {\n            let videoCodeStart = inputURL.indexOf('youtu.be') + 9; // youtu.be/(videoCode)\n            let videoCodeEnd = videoCodeStart + 11;\n            if (inputURL.slice(videoCodeStart, videoCodeEnd).length < 11) {\n                return false;\n            }\n            if (inputURL.slice(8, 16) === 'youtu.be') {\n                // https\n                return { urltype: 'shortURL', url: inputURL.slice(8), listcode };\n            }\n            if (inputURL.slice(7, 15) === 'youtu.be') {\n                // http\n                return { urltype: 'shortURL', url: inputURL.slice(7), listcode };\n            }\n            if (inputURL.slice(0, 8) === 'youtu.be') {\n                return { urltype: 'shortURL', url: inputURL, listcode };\n            }\n        }\n        if (inputURL.includes('youtube.com')) {\n            let videoCodeStart = inputURL.indexOf('?v=') + 3;\n            let videoCodeEnd = videoCodeStart + 11;\n            if (inputURL.slice(videoCodeStart, videoCodeEnd).length < 11) {\n                return false;\n            }\n            if (inputURL.slice(0, 11) === 'youtube.com') {\n                // www 생략\n                return { urltype: 'fullURL', url: inputURL, listcode };\n            }\n            if (inputURL.slice(4, 15) === 'youtube.com') {\n                return { urltype: 'fullURL', url: inputURL.slice(4), listcode };\n            }\n            if (inputURL.slice(11, 22) === 'youtube.com') {\n                // http\n                return { urltype: 'fullURL', url: inputURL.slice(11), listcode };\n            }\n            if (inputURL.slice(12, 23) === 'youtube.com') {\n                // https\n                return { urltype: 'fullURL', url: inputURL.slice(12), listcode };\n            }\n        } else return false;\n    }\n\t\n\tfunction openVideo() {\n\t\tlet result = document.getElementById('result').value\n\t\tlet input = document.getElementById('originallink').value\n\t\tif ( result ) {\n\t\t\twindow.open(result);\n\t\t} else {\n\t\t\twindow.open(input);\n\t\t}\n\t}\n\n    function isNumber(val) {\n        if (val == parseInt(val)) return true;\n        else return false;\n    }\n\n    function isEmpty(val) {\n        if (val == null || val == '' || val == undefined) return true;\n        else return false;\n    }\n\n    function share() {\n        let t = document.createElement('textarea');\n        document.body.appendChild(t);\n        t.value = window.location;\n        t.select();\n        document.execCommand('copy');\n        document.body.removeChild(t);\n        setTimeout(() => alert('URL copied!\\nThanks for sharing'), 300);\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1 id=\"title\">Youtube specific time URL Generator</h1>\n                <div className=\"main\">\n                    <input\n                        id=\"originallink\"\n                        type=\"text\"\n                        className=\"width100\"\n                        placeholder=\"original URL\"\n                        onChange={() => onInputURLChange()}\n                    />\n                    <div className=\"p-tooltip input-tooltip\">\n                        <div className=\"p-tooltip-content input-tooltip\">check your URL</div>\n                        <div className=\"p-tooltip-arrow input-tooltip\" />\n                    </div>\n\n                    <div className=\"inputs width100\">\n                        <input\n                            id=\"min\"\n                            type=\"text\"\n                            minLength=\"1\"\n                            maxLength=\"4\"\n                            size=\"6\"\n                            placeholder=\"min\"\n                            onChange={() => onTimeChange()}\n                        />\n                        &nbsp;&nbsp;:&nbsp;&nbsp;\n                        <input\n                            id=\"sec\"\n                            type=\"text\"\n                            minLength=\"1\"\n                            maxLength=\"2\"\n                            size=\"6\"\n                            placeholder=\"sec\"\n                            onChange={() => onTimeChange()}\n                        />\n                        <button id=\"submit\" onClick={() => onSubmit()}>\n                            submit\n                        </button>\n                    </div>\n                    <input\n                        id=\"result\"\n                        type=\"text\"\n                        placeholder=\"result\"\n                        readOnly\n                        style={{ width: '100%' }}\n                        onClick={() => copyResultToClipboard()}\n                    />\n                </div>\n            </header>\n            <img id=\"thumbnail\" alt=\"\" onClick={() => {openVideo()}}></img>\n            <button id=\"share\" onClick={() => share()}>\n                share this page\n            </button>\n        </div>\n    );\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}